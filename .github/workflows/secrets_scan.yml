name: TruffleHog Secrets Scan

on:
  pull_request:
    types:
      - opened
      - synchronize

jobs:
  trufflehog-scan:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install TruffleHog
        run: |
          pip install truffleHog

      - name: Run TruffleHog
        id: trufflehog
        run: |
          trufflehog --json . > trufflehog_output.json

      - name: Extract TruffleHog findings
        id: extract-findings
        run: |
          jq -r '.[] | "Found secret of type \(."DetectorName") in \(."file"): \(."stringsFound"[].string)"' trufflehog_output.json > findings.txt

      - name: Add comments to PR
        uses: actions/github-script@v5
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const findings = fs.readFileSync('findings.txt', 'utf-8').split('\n').filter(line => line !== '');
            
            const githubContext = github.context;
            const octokit = github.getOctokit(githubContext.token);
            
            async function createComment(owner, repo, prNumber, body) {
              await octokit.rest.issues.createComment({
                owner: owner,
                repo: repo,
                issue_number: prNumber,
                body: body
              });
            }
            
            async function run() {
              const prNumber = githubContext.payload.pull_request.number;
              const owner = githubContext.repo.owner;
              const repo = githubContext.repo.repo;
              
              if (findings.length > 0) {
                let commentBody = 'TruffleHog Secrets Scan Detected the following secrets:\n\n';
                findings.forEach(secret => {
                  commentBody += `- ${secret}\n`;
                });
                
                await createComment(owner, repo, prNumber, commentBody);
              }
            }
            
            run();

